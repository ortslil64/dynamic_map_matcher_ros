<?xml version="1.0"?>
<launch>

<!-- Launch robot -->
<include file="$(find dynamic_map_matcher_ros)/launch/empty_world.launch" >
  <arg name="world_name" value="$(find dynamic_map_matcher_ros)/demo/worlds/map10_world/model.sdf"/>
</include>

<rosparam file="$(find dynamic_map_matcher_ros)/demo/config/sequential_map_matcher.yaml" />
<node pkg="dynamic_map_matcher_ros" type="map_matcher_node.py" name="tmap_matcher_node" output="screen"/>

<group ns="ABot1">
<param name="tf_prefix" value="/ABot1" />
<node pkg="tf" type="static_transform_publisher" name="map_world_static_broadcaster" args="0 0 0 0 0 0 1 map world 100" />
<node pkg="tf" type="static_transform_publisher" name="laser" args="0.225 0 0.2 0 0 0 1 /ABot1/base_link /ABot1/base_laser 100" />

  <!-- send ABot urdf to param server -->
  

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" >
  </node>
<param name="/ABot1/robot_description" command="$(find xacro)/xacro '$(find dynamic_map_matcher_ros)/demo/urdf/ABot.urdf.xacro'" />
  <!-- push ABot_description to factory and spawn robot in gazebo -->
  <node name="spawn_ABot" pkg="gazebo_ros" type="spawn_model" args=" -x 16.2 -y -16.5 -Y 2.88 -urdf -model ABot1 -param /ABot1/robot_description" respawn="false" output="screen" />


<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">

<!-- Topic names -->
<param name="scan_topic" value="/ABot1/scan" />

<!-- Frame names -->
<param name="base_frame" value="/ABot1/base_laser" />
<param name="odom_frame" value="/ABot1/odom"/>
<param name="output_timing" value="false"/>

<!-- Tf use -->
<param name="use_tf_scan_transformation" value="true"/>
<param name="use_tf_pose_start_estimate" value="false"/>
<param name="pub_map_odom_transform" value="true"/>
<param name="advertise_map_service" value="true"/>

<!-- Map size / start point -->
<param name="map_resolution" value="0.1"/>
<param name="map_size" value="2048"/>
<param name="map_start_x" value="0.5"/>
<param name="map_start_y" value="0.5" />
<param name="map_multi_res_levels" value="1" />

<!-- Map update parameters -->
<param name="update_factor_free" value="0.4"/>
<param name="update_factor_occupied" value="0.9" />
<param name="map_update_distance_thresh" value="0.1"/>
<param name="map_update_angle_thresh" value="0.06" />
<param name="laser_max_dist" value="30.0" />

<!-- Debug parameters -->
<!--
<param name="pub_drawings" value="true"/>
<param name="pub_debug_output" value="true"/>
-->
</node>

<!--- Run Move Base -->
   <include file="$(find dynamic_map_matcher_ros)/demo/move_base/move_base_ABot1.launch"/>

<node pkg="explore_lite" type="explore" respawn="false" name="explore" output="log">
  <param name="robot_base_frame" value="/ABot1/base_link"/>
  <param name="costmap_topic" value="/ABot1/map"/>
  <param name="costmap_updates_topic" value="/ABot1/map_updates"/>
  <param name="visualize" value="true"/>
  <param name="planner_frequency" value="0.33"/>
  <param name="progress_timeout" value="30.0"/>
  <param name="potential_scale" value="3.0"/>
  <param name="orientation_scale" value="0.0"/>
  <param name="gain_scale" value="1.0"/>
  <param name="transform_tolerance" value="0.3"/>
  <param name="min_frontier_size" value="0.75"/>
</node>

</group>

<!-- ####################robot2#################### -->
<group ns="ABot2">
<param name="tf_prefix" value="/ABot2" />
<node pkg="tf" type="static_transform_publisher" name="map_world_static_broadcaster" args="0 0 0 0 0 0 1 map world 100" />
<node pkg="tf" type="static_transform_publisher" name="laser" args="0.225 0 0.2 0 0 0 1 /ABot2/base_link /ABot2/base_laser 100" />

  <!-- send ABot urdf to param server -->
  

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" >
  </node>
<param name="/ABot2/robot_description" command="$(find xacro)/xacro '$(find dynamic_map_matcher_ros)/demo/urdf/ABot.urdf.xacro'" />
  <!-- push ABot_description to factory and spawn robot in gazebo -->
  <node name="spawn_ABot" pkg="gazebo_ros" type="spawn_model" args=" -x -9.6 -y -15.5 -Y -1.5707 -urdf -model ABot2 -param /ABot2/robot_description" respawn="false" output="screen" />


<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">

<!-- Topic names -->
<param name="scan_topic" value="/ABot2/scan" />

<!-- Frame names -->
<param name="base_frame" value="/ABot2/base_laser" />
<param name="odom_frame" value="/ABot2/odom"/>
<param name="output_timing" value="false"/>

<!-- Tf use -->
<param name="use_tf_scan_transformation" value="true"/>
<param name="use_tf_pose_start_estimate" value="false"/>
<param name="pub_map_odom_transform" value="true"/>
<param name="advertise_map_service" value="true"/>

<!-- Map size / start point -->
<param name="map_resolution" value="0.1"/>
<param name="map_size" value="2048"/>
<param name="map_start_x" value="0.5"/>
<param name="map_start_y" value="0.5" />
<param name="map_multi_res_levels" value="1" />

<!-- Map update parameters -->
<param name="update_factor_free" value="0.4"/>
<param name="update_factor_occupied" value="0.9" />
<param name="map_update_distance_thresh" value="0.1"/>
<param name="map_update_angle_thresh" value="0.06" />
<param name="laser_max_dist" value="30.0" />

<!-- Debug parameters -->
<!--
<param name="pub_drawings" value="true"/>
<param name="pub_debug_output" value="true"/>
-->
</node>

<!--- Run Move Base -->
   <include file="$(find dynamic_map_matcher_ros)/demo/move_base/move_base_ABot2.launch"/>

<node pkg="explore_lite" type="explore" respawn="false" name="explore" output="log">
  <param name="robot_base_frame" value="/ABot2/base_link"/>
  <param name="costmap_topic" value="/ABot2/map"/>
  <param name="costmap_updates_topic" value="/ABot2/map_updates"/>
  <param name="visualize" value="true"/>
  <param name="planner_frequency" value="0.33"/>
  <param name="progress_timeout" value="30.0"/>
  <param name="potential_scale" value="3.0"/>
  <param name="orientation_scale" value="0.0"/>
  <param name="gain_scale" value="1.0"/>
  <param name="transform_tolerance" value="0.3"/>
  <param name="min_frontier_size" value="0.75"/>
</node>

</group>


<!-- Launch Rviz with config file  -->
<node type="rviz" name="rviz1" pkg="rviz" args="-d $(find dynamic_map_matcher_ros)/demo/rviz/viz1.rviz" />
<node type="rviz" name="rviz2" pkg="rviz" args="-d $(find dynamic_map_matcher_ros)/demo/rviz/viz2.rviz" />



</launch>
